/*
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。
*/

//虽然很多人都是用的数字整除的办法，我能想到的就是转化我字符串然后再转换回来
class Solution {
    public int reverse(int x) {
    //注意一下这个溢出问题就可以了

        if(x < Integer.MIN_VALUE || x > Integer.MAX_VALUE ) return 0;
        int reverseNum = 0;
        String xString = "";
        if(x < 0){

            xString = Integer.toString(Math.abs(x));

        }else{
            xString = Integer.toString(x);
        }

        StringBuilder sb_absx = new StringBuilder(xString);
        StringBuilder reverseString = sb_absx.reverse();
        try{
           reverseNum = Integer.parseInt(reverseString.toString()); 
        }catch(Exception e){
            reverseNum = 0;
        }
        

        if(x < 0){
            reverseNum = -reverseNum;
        }
        return reverseNum;
    }
}
